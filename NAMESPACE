useDynLib(TunePareto, .registration = TRUE)

export(
    as.interval,
    allCombinations,
    tunePareto,
    tuneParetoClassifier,
    tunePareto.knn,
    tunePareto.tree,
    tunePareto.randomForest,
    tunePareto.svm,
    tunePareto.NaiveBayes,
    trainTuneParetoClassifier,
    recalculateParetoSet,
    mergeTuneParetoResults,
    plotDominationGraph,
    plotParetoFronts2D,
    plotObjectivePairs,
    createObjective,
    reclassAccuracy,
    reclassError,
    reclassWeightedError,
    reclassSensitivity,
    reclassRecall,
    reclassTruePositive,
    reclassSpecificity,
    reclassTrueNegative,
    reclassFallout,
    reclassFalsePositive,
    reclassMiss,
    reclassFalseNegative,
    reclassPrecision,
    reclassPPV,
    reclassNPV,
    reclassConfusion,
    cvAccuracy,
    cvError,
    cvErrorVariance,
    cvWeightedError,
    cvSensitivity,
    cvRecall,
    cvTruePositive,
    cvSpecificity,
    cvTrueNegative,
    cvFallout,
    cvFalsePositive,
    cvMiss,
    cvFalseNegative,
    cvPrecision,
    cvPPV,
    cvNPV,
    cvConfusion,
    reclassification,
    crossValidation,
    rankByDesirability,
    generateCVRuns
)

S3method(predict, TuneParetoModel)
S3method(print, TuneParetoModel)
S3method(print, TuneParetoResult)
S3method(print, TuneParetoClassifier)

import(
    graphics,
    stats)
